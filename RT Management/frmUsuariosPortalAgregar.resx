<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABgAAAA8AAAAVAAAAFgAAABYAAAAVAAAADwAA
        AAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAA4AAAAgAAAANAAAAEAAAABDAAAAQwAA
        AEAAAAA0AAAAIAAAAA4AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACwAA
        ABIAAAAVAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAdAAAALwBFJWkAfEPRAIpJ/wCJ
        Sf8AiUn/AIpJ/wB8Q9EARSVpAAAALQAAABIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAA
        ABkAAAAtAAAAOgAAAEEAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEYAdEC0AJJT/wC2
        ef8AzZD/ANGU/wDRlP8AzZD/ALZ5/wCRUv8AdD+0AAAALQAAAA4AAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAAAeIREDR4lECbaYSwjdpE8H/6ROBv+kTgb/pE4G/6ROBv+kTgb/pE4G/6dNBv+2SwP/THAs/wCY
        WP8AzI//AM2P/wDJiv8AxoX/AMaF/wDJiv8AzY//AMuP/wCWVv8AdkCxAAAAIAAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAEEYkCFCrVQ7/vnIv/9CJSv/dnV//4KJk/+ChY//goWP/4KFj/+ChY//hoWP/6aJj/7Sb
        XP8AlFT/AMqO/wDKjP8Ax4j/AMOA////////////AMOA/wDHiP8Ayoz/AMmN/wCSUf8ATSpdAAAADwAA
        AAAAAAAAAAAAAAAAAAAAAAAWq1sV7c2JSv/jp2//3p5f/92aWf/cmFf/3JhX/9yYV//cmFf/3JhX/9+Y
        V//tmFf/O49N/wCzdP8AyIr/AMWG/wDDg/8Avnn///////////8Avnn/AMOD/wDFhv8AyIr/ALN0/wCA
        Rc0AAAAVAAAAAAAAAAAAAAAAAAAAAAAAABayYBf/5rSF/+KhYP/gn1//4J9f/+CfX//gn1//4J9f/+Cf
        X//gn1//459f//WgYP8AiEj/AMWH/wDDg/8Avnz/ALx3/wC4b////////////wC4b/8AvHf/AL58/wDD
        g/8AxYf/AIpK/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAFr91Mf/pvJL/46Zl/+OmZ//jpmf/46Zn/+Om
        Z//jpmf/46Zn/+OmZ//npmf/+qdo/wCHRv8XzZX/AL16////////////////////////////////////
        ////////AL16/xvNlv8AiUn/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAWxoA//+vFoP/nrGv/561t/+et
        bv/nrW7/561u/+etbv/nrGz/56tp/+uqaP/+rWz/AIVD/zXSof8Au3b/////////////////////////
        //////////////////8Au3f/OdOi/wCJSP8AAAAVAAAAAAAAAAAAAAAAAAAAAAAAABbKhUb/7s6x/+uz
        c//rtHX/67R2/+u0dv/rtHb/67N0/+uxcP/rvIb/8O/u//++h/8Agjz/adq3/wC7eP8AuXT/ALdx/wCy
        aP///////////wCyaP8At3H/ALl0/wC7eP9u3Ln/AIlH/wAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAFc+N
        T//x2MD/8Ll4/++6fP/vu37/77t+/++7ff/vuXj/78KL//Hz9f/w8vT/+e7t/zecYf9Xw5n/KMiU/wC6
        eP8AuXj/ALRu////////////ALRu/wC5eP8Aunj/KsiV/2PHoP8AhUbEAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAOzII7//bk0//y1LD/8sCA//LBg//ywYT/8sCB//LAgv/2+Pn/8/T1//Dv7f/07u7/tdLB/wCM
        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
</value>
  </data>
</root>